-------------------------------------------------------------------------------
-- @module Battle.doclua
--
-- Defines various types and bindings used by Battles in the PokemonSMS Core Libraries
--[bind.battle]

---
--@type Battle
--The type of handles passed as the `battle` field of move event handlers.
--All methods have an implicit "self" parameter. 
--The behavior is undefined if any methods of Battle are called, except by method invocation.

---
--@type PokemonList
--[bind.battle.pkmlist]
--@list<Pokemon#Pokemon>

---
--@type PokemonIterator
--[bind.battle.pkmitr]
--A Stateless iterator function that iterates over the ipairs resultant from Battle:getPokemon() or Battle:select()
--
--@callof #PokemonIterator
--@param #PokemonList a the list to iterate over
--@param #number i the integer index to the previous element in the list
--@return #number,Pokemon#Pokemon the index,value pair to update the foreach loop

---
--@type SideList
--[bind.battle.sidelist]
--@list<#Side>

---
--@type SideIterator
--[bind.battle.sideitr]
--A Stateless iterator function that iterates over the ipairs resultant from getSides().
--
--@callof #SideIterator
--@param #SideList a the list
--@param #number i the integer index to the previous element in the list
--@return #number,#Side

---
--@function[parent=#Battle] select()
--[bind.battle.select]
--Returns an iterator of Pokemon that matches a given Selector
--@param self
--@param Pokemon#Pokemon source the pokemon that the selection originates from
--@param Constants#TargetSelector selector The selection arguments. 
--@param Pokemon#Pokemon... ... zero or more pokemon handles that represent pokemon to exclude from the selection
--@return #PokemonIterator,#PokemonList,#number The iterator. The order shall correspond to slot order of pokemon
--@usage for _,p in battle:select(...) do ... end

---
--@function[parent=#Battle] isRemote()
--[bind.battle.isRemote]
--Returns true iff the side that this battle represents is distinct from the logical side it exists on.
--@param self
--@return #boolean true iff the battle is remote

---
--@function[parent=#Battle] isEvent()
--[bind.battle.isEvent]
--Returns true iff actions taken in battle are processed directly by this battle (and are not forwarded to some other remote)
--@param self
--@return #boolean true iff the battle handles events

---
--@function[parent=#Battle] getSides()
--[bind.battle.getSides]
--Returns an iterator of the side handles for this battle
--@param self
--@return #SideIterator,#SideList,#number the iterator group

---
--@function[parent=#Battle] getSide()
--[bind.battle.getSide]
--Gets the side handle associated with a given Pokemon
--@param self
--@param Pokemon#Pokemon pokemon a pokemon handle
--@return #Side the side associated with the handle

---
--@function[parent=#Battle] getPokemon()
--[bind.battle.getPokemon]
--Gets the list of pokemon associated with a given side, or if no side provided, gets all pokemon that are presently in battle.
--@param self
--@param #Side side the side to check (optional)
--@return #PokemonIterator,#PokemonList,#number the ipairs iterator resultant to all the sides


---
--@type State
--[bind.battle.state]
--The type of States that are handling Combat Moves in Battle

---
--@function[parent=#State] getSource()
--[bind.battle.state.getSource]
--Returns a handle for the source Pokemon
--This method is always valid to call when you have a valid state handle
--@param self
--@return Pokemon#Pokemon the source of the move

---
--@function[parent=#State] getTarget()
--[bind.battle.state.getTarget]
--Returns a handle for the target Pokemon

return nil
