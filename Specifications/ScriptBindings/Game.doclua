---
-- @module Game 
-- [bind.client.game]
-- A Client Side Only library which can perform various miscilanious actions.

---
--@function[parent=#Game] generateProlougePokemon(species)
--Generates a Pokemon for use in the Prolouge, which has the species given by species 
--All values assigned to the pokemon are unspecified, but shall be valid. 
--
--Multiple calls to this function with the same species,
-- need not result in the same, or an equivalent pokemon
--
--Calling this function outside of the Prolouge Sequence ([seq.prolouge]), is conditionally supported. 
--If supported, the result of calling this function shall be the same as calling it during prolouge.
--Otherwise, the behavior is undefined. 
--
--The behavior of modifying any field of the pokemon using the provided binding methods is undefined. 
--
--@param #string species A Resource Location which names the species of pokemon to generate
--@return Pokemon#Pokemon the Pokemon that was generated
--@return #nil if species is not a valid resource location, or does not name a pokemon
--
--[bind.client.game.genProlougePkm]

---
--@function[parent=#Game] createItemStack(item,count,extra)
--Creates an item stack containing count of item, with the given extra tag
--@param #string item A resource location that names the item to give
--@param #number count the number of items to generate
--@param #string subitem the subitem. (Optional)
--@param #table extra the extra information to associate with the item. May be nil
--@return Types#ItemStack the item stack generated
--
--[bind.client.game.createItemStack]

---
--@function[parent=#Game] getPlayer()
--Returns the player for the game, or nil if the game is in the Gamemode "NONE".
--@return Types#Player the player currently in use
--
--[bind.client.game.getPlayer]


return nil
